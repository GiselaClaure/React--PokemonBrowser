{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokemonName","setPokemonName","pokemonChosen","setPokemonChosen","name","number","species","image","backImage","hp","attack","defense","speed","type","pokemon","setPokemon","className","src","onChange","event","target","value","toLowerCase","onClick","axios","get","then","res","data","id","sprites","front_default","back_default","stats","base_stat","types","toUpperCase","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAmFeA,EA/EH,WACV,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8BJ,mBAAS,CACrCK,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,UAAW,GACXC,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,KAAM,KAVR,mBAAOC,EAAP,KAAgBC,EAAhB,KAiCA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,gBAAd,UAA8B,qBAAKC,IAAI,2DAAvC,uBACA,kDACA,uBAAOJ,KAAK,OAAOK,SAAU,SAACC,GAC5BlB,EAAekB,EAAMC,OAAOC,QAE9BA,MAAOrB,EAAYsB,gBACnB,wBAAQC,QA7BQ,WACpBC,IAAMC,IAAN,4CAA+CzB,IAAe0B,MAC5D,SAACC,GACCZ,EAAW,CACTX,KAAMJ,EACNK,OAAQsB,EAAIC,KAAKC,GACjBvB,QAASqB,EAAIC,KAAKtB,QAAQF,KAC1BG,MAAOoB,EAAIC,KAAKE,QAAQC,cACxBvB,UAAUmB,EAAIC,KAAKE,QAAQE,aAC3BvB,GAAIkB,EAAIC,KAAKK,MAAM,GAAGC,UACtBxB,OAAQiB,EAAIC,KAAKK,MAAM,GAAGC,UAC1BvB,QAASgB,EAAIC,KAAKK,MAAM,GAAGC,UAC3BtB,MAAOe,EAAIC,KAAKK,MAAM,GAAGC,UACzBrB,KAAMc,EAAIC,KAAKO,MAAM,GAAGtB,KAAKT,OAE/BD,GAAiB,OAcjB,kCAEF,qBAAKa,UAAU,iBAAf,SACId,EAKA,qCACA,oBAAIc,UAAU,eAAd,SAA8BF,EAAQV,KAAKgC,gBAC3C,sBAAKpB,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,cAAcC,IAAKH,EAAQP,MAAO8B,IAAKvB,EAAQV,OAC9D,qBAAMY,UAAU,aAAaC,IAAKH,EAAQN,UAAW6B,IAAKvB,EAAQV,UAElE,sBAAKY,UAAU,mBAAf,UACE,qBAAIA,UAAU,kBAAd,sBAA0CF,EAAQT,UACpD,qBAAIW,UAAU,kBAAd,sBAA0CF,EAAQR,WAClD,qBAAIU,UAAU,kBAAd,mBAAuCF,EAAQD,QAC/C,qBAAIG,UAAU,kBAAd,iBAAqCF,EAAQL,MAC7C,qBAAIO,UAAU,kBAAd,qBAAyCF,EAAQJ,UACjD,qBAAIM,UAAU,kBAAd,sBAA0CF,EAAQH,WAClD,qBAAIK,UAAU,kBAAd,oBAAwCF,EAAQF,kBAlBlD,qBAAKI,UAAU,qBAAf,SACA,oBAAIA,UAAU,iBAAd,kDC1CKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5fd1cbb1.chunk.js","sourcesContent":["import './App.scss';\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [pokemonChosen, setPokemonChosen] = useState(false);\n  const [pokemon, setPokemon] = useState({\n    name: \"\",\n    number: \"\",\n    species: \"\",\n    image: \"\",\n    backImage: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    type: \"\",\n  });\n\n  const searchPokemon = () => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`).then(\n      (res) => {\n        setPokemon({\n          name: pokemonName,\n          number: res.data.id,\n          species: res.data.species.name,\n          image: res.data.sprites.front_default,\n          backImage:res.data.sprites.back_default,\n          hp: res.data.stats[0].base_stat,\n          attack: res.data.stats[1].base_stat,\n          defense: res.data.stats[2].base_stat,\n          speed: res.data.stats[5].base_stat,\n          type: res.data.types[0].type.name,\n        });\n        setPokemonChosen(true);\n      }\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"TitleSection\">\n        <h1 className=\"title-browser\"><img src=\"https://img.icons8.com/bubbles/100/000000/pokeball.png\"/> POKEMON BROWSER </h1>\n        <p>Choose a Pokemon:</p>\n        <input type=\"text\" onChange={(event) => {\n          setPokemonName(event.target.value);\n        }}\n        value={pokemonName.toLowerCase()} />\n        <button onClick={searchPokemon}>Search Pokémon</button>\n      </div>\n      <div className=\"DisplaySection\">\n        {!pokemonChosen ? (\n          <div className=\"choosing-container\">\n          <h1 className=\"choosing-title\"> Please choose a Pokémon </h1>\n          </div>\n        ) : ( \n          <>\n          <h1 className=\"pokemon-name\">{pokemon.name.toUpperCase()}</h1>\n          <div className=\"container\">            \n            <div className=\"image-container\">\n            <img className=\"front_image\" src={pokemon.image} alt={pokemon.name} />\n            <img  className=\"back_image\" src={pokemon.backImage} alt={pokemon.name} />\n            </div>\n            <div className=\"detail-container\">\n              <h3 className=\"pokemon-details\">Number: #{pokemon.number}</h3>\n            <h3 className=\"pokemon-details\">Species: {pokemon.species}</h3>\n            <h3 className=\"pokemon-details\">Type: {pokemon.type}</h3>\n            <h4 className=\"pokemon-details\">Hp: {pokemon.hp}</h4>\n            <h4 className=\"pokemon-details\">Attack: {pokemon.attack}</h4>\n            <h4 className=\"pokemon-details\">Defense: {pokemon.defense}</h4>\n            <h4 className=\"pokemon-details\">Speed: {pokemon.speed}</h4>\n          </div>\n            \n            </div>\n            \n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}